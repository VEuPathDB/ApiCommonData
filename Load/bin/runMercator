#!/bin/bash

set -e    # exit if any error!

#--------------------------------------------------------------------------------

DRAFT_COUNT=1;
NON_DRAFT_COUNT=1;
COUNT=1;

declare -a DRAFT
declare -a NON_DRAFT
declare -a BASENAMES

#--------------------------------------------------------------------------------

usage()
{
echo 'runMercator -p <PATH TO MERCATOR DIRECTORY> -t <tree string> -m <MAVID_EXE> -c <CNDSRC_DIR> -d draftGenome1... -d draftGemoneN -n nonDraftGeome1... -n nonDraftGenomeN -r referenceGenome'
exit 1;
}

if [ -z $1 ]; then
  usage
fi

#--------------------------------------------------------------------------------

while getopts ":ht:m:c:d:n:p:r:" Option
do
  case $Option in
    m) MAVID_EXE=$OPTARG;
       ;;
    r) REFERENCE_GENOME=$OPTARG;
       ;;
    p) MERCATOR_DIR=$OPTARG;
       ;;
    c) CNDSRC_DIR=$OPTARG;
       ;;
    t) TREE=$OPTARG;
       ;;
    d) DRAFT[${DRAFT_COUNT}]="-d $OPTARG"
       BASENAMES[${COUNT}]=$OPTARG
       let "DRAFT_COUNT += 1"
       let "COUNT += 1"
       ;;
    n)  NON_DRAFT[${NON_DRAFT_COUNT}]=$OPTARG
        BASENAMES[${COUNT}]=$OPTARG
       let "NON_DRAFT_COUNT += 1"
       let "COUNT += 1"
       ;;
    h) usage
       ;;
  esac
done

#--------------------------------------------------------------------------------
FASTA_DIR=$MERCATOR_DIR/fasta
GFF_DIR=$MERCATOR_DIR/gff
MERCATOR_INPUT=$MERCATOR_DIR/mercator-input
MERCATOR_OUTPUT=$MERCATOR_DIR/mercator-output
ALIGN_DIR=$MERCATOR_OUTPUT/alignments

FA2SDB=$CNDSRC_DIR/fa2sdb
MAKE_MERCATOR_INPUT=$CNDSRC_DIR/makeMercatorInput
MERCATOR=$CNDSRC_DIR/mercator
MASKREPETATIVE=$CNDSRC_DIR/maskRepetitive
PHITS2CONSTRAINTS=$CNDSRC_DIR/phits2constraints
SDBASSEMBLE=$CNDSRC_DIR/sdbAssemble
MAKEALIGNMENTINPUT=$CNDSRC_DIR/makeAlignmentInput
MAVIDALIGNDIRS=$CNDSRC_DIR/mavidAlignDirs
OMAP2COORDINATES=$CNDSRC_DIR/omap2coordinates
MAP_DRAFT=$CNDSRC_DIR/map_draft

export PATH=$CNDSRC_DIR:$PATH

#--------------------------------------------------------------------------------
# Check that directories are there and make the ones you need if they're not
for X in $MERCATOR_DIR $CNDSRC_DIR $FASTA_DIR $GFF_DIR $MERCATOR_INPUT $MERCATOR_OUTPUT $ALIGN_DIR
  do
    echo Checking Directory Exists [$X]
    if [ -d $X ]; then 
      echo Directory $X Exists
    elif [ ${X} = ${ALIGN_DIR} -o ${X} = ${MERCATOR_INPUT} -o ${X} = ${MERCATOR_OUTPUT} ]; then
      mkdir -p $X
      echo Created Directory $X
    else
        echo Expected Directory is MISSING [$X]
        exit 1;
    fi
done

# Check that the execuatbles are included
for X in $FA2SDB $MAKE_MERCATOR_INPUT $MERCATOR $MASKREPETATIVE $PHITS2CONSTRAINTS $SDBASSEMBLE $MAKEALIGNMENTINPUT $MAVIDALIGNDIRS $OMAP2COORDINATES $MAP_DRAFT
  do
    echo Checking Executable Exists [$X]
    if [ -e $X ]; then 
      echo Executable $X Exists
    else
        echo Expected Executable is MISSING [$X]
        exit 1;
    fi
  done

#--------------------------------------------------------------------------------

# make the sbd files in the fasta directory
for X in ${BASENAMES[@]} 
  do
    X=$FASTA_DIR/$X

    $FA2SDB ${X}.sdb < ${X}.fasta
  done

$MAKE_MERCATOR_INPUT --genome-dir $FASTA_DIR --gff-dir $GFF_DIR --out-dir $MERCATOR_INPUT ${BASENAMES[@]}

$MERCATOR -i $MERCATOR_INPUT -o $MERCATOR_OUTPUT ${DRAFT[@]} ${NON_DRAFT[@]} 

cd $MERCATOR_OUTPUT

$PHITS2CONSTRAINTS --input-dir $MERCATOR_INPUT < pairwisehits > constraints

# Must deal with Draft and non draft separately
#--------------------------------------------------------------------------------
for g in ${DRAFT[@]}
  do
    if [ $g != '-d' ]; then
        $SDBASSEMBLE $FASTA_DIR/$g.sdb $g.sdb < $g.agp
    fi
  done

for g in ${NON_DRAFT[@]}
  do
     ln -s $FASTA_DIR/$g.sdb
  done
#--------------------------------------------------------------------------------

echo $TREE >treefile

$MAKEALIGNMENTINPUT $MERCATOR_OUTPUT $ALIGN_DIR

if ! [ -d "$ALIGN_DIR/1" ]; then
  # Empty alignment directory.  Skip pair. 
  exit 0
fi

$MAVIDALIGNDIRS --init-dir $ALIGN_DIR --mavidpath $MAVID_EXE

$OMAP2COORDINATES --map-dir $ALIGN_DIR < $ALIGN_DIR/map > $ALIGN_DIR/coordinates

for (( i = 1 ; i < ${#BASENAMES[@]} ; i++ )) 
  do
    for (( j = i+1 ; j <= ${#BASENAMES[@]} ; j++ )) 
     do
       AGP_FILE=$MERCATOR_OUTPUT/${BASENAMES[$i]}.agp
       OUT=$MERCATOR_DIR/${BASENAMES[$i]}-${BASENAMES[$j]}.align

       bash -e $MAP_DRAFT ${BASENAMES[$i]} ${BASENAMES[$j]} $AGP_FILE $ALIGN_DIR >$OUT
     done
  done
 
echo "Finished aligning multiple genomes with Mercator and MAVID"
