#!/usr/bin/perl 
## Given a taxonId, print a comma-separated list of taxonIds for the tree
## species parent of the given taxon

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Supported::GusConfig;

my ($verbose,$taxon_id,$gusConfigFile);
&GetOptions("verbose!"=> \$verbose,
            "NCBITaxId=s" => \$taxon_id,
            "gusConfigFile=s" => \$gusConfigFile);

my $usage = "usage: getSpeciesTaxa --NCBITaxId --verbose " .
             "--gusConfigFile [\$GUS_CONFIG_FILE]\n";
die $usage unless $taxon_id;

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Supported::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->
  new($gusconfig->getDbiDsn(),
      $gusconfig->getReadOnlyDatabaseLogin(),
      $gusconfig->getReadOnlyDatabasePassword(),
      $verbose,0,1,
      $gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

my $sql = <<SQL;
WITH RECURSIVE cte AS (
  SELECT
    taxon_id
    , parent_id
  FROM Sres.Taxon
  WHERE ncbi_tax_id IN ($taxon_id)
  UNION
  SELECT dtl.taxon_id, dtl.parent_id
  FROM Sres.taxon dtl, cte
  WHERE cte.parent_id = dtl.taxon_id
    AND dtl.rank = 'species'
)
SELECT ncbi_tax_id
FROM cte, sres.taxon t
WHERE cte.taxon_id = t.taxon_id
SQL

print STDERR "Query: $sql\n" if $verbose;

my $stmt = $dbh->prepareAndExecute($sql);

my @taxa;
while(my($currentTaxon) = $stmt->fetchrow_array()){
  push(@taxa, $currentTaxon);
}

print join(',', @taxa), "\n";

$db->logout();
